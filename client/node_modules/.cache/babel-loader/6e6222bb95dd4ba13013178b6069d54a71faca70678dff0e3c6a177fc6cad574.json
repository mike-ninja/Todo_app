{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport todoService from '../services/todo';\nconst Todo = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    async function fetchTodos() {\n      try {\n        todoService.getAllTodo().then(fetchedTodos => {\n          setTodos(fetchedTodos);\n        });\n      } catch (error) {\n        console.log(`Failed to fetch todos: ${error}`);\n      }\n    }\n    fetchedTodos();\n  }, []);\n};\n_s(Todo, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useState","todoService","Todo","_s","todos","setTodos","fetchTodos","getAllTodo","then","fetchedTodos","error","console","log","_c","$RefreshReg$"],"sources":["/home/mike/coding/ongoing_projects/Todo_app/client/src/components/Todo.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport todoService from '../services/todo'\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([])\n\n  useEffect(() => {\n    async function fetchTodos() {\n      try {\n        todoService\n          .getAllTodo()\n          .then(fetchedTodos => {\n            setTodos(fetchedTodos)\n          })\n      } catch (error) {\n        console.log(`Failed to fetch todos: ${error}`)\n      }\n    }\n    fetchedTodos()\n  }, [])\n}\n\nexport default Todo\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,eAAeO,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACFL,WAAW,CACRM,UAAU,CAAC,CAAC,CACZC,IAAI,CAACC,YAAY,IAAI;UACpBJ,QAAQ,CAACI,YAAY,CAAC;QACxB,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAE,0BAAyBF,KAAM,EAAC,CAAC;MAChD;IACF;IACAD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAAN,EAAA,CAjBKD,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAmBV,eAAeA,IAAI;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}