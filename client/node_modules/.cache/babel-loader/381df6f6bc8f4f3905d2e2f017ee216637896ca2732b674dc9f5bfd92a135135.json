{"ast":null,"code":"var _jsxFileName = \"/home/mike/coding/ongoing_projects/Todo_app/client/src/components/AddTodo.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputTodo = _ref => {\n  _s();\n  let {\n    addTodo\n  } = _ref;\n  const [task, setTask] = useState('');\n  const onSubmitForm = event => {\n    event.preventDefault();\n    if (task.length) {\n      const newTodo = {\n        task: task,\n        status: false\n      };\n      addTodo(newTodo);\n      setTask('');\n    } else {\n      alert('Cannot send an empty task');\n    }\n  };\n  const handleChange = event => {\n    setTask(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"d-flex mt-5\",\n    onSubmit: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"add task\",\n      className: \"form-control\",\n      value: task,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(InputTodo, \"cJE39Iugkv77Am2GUaY068Dantw=\");\n_c = InputTodo;\nexport default InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","InputTodo","_ref","_s","addTodo","task","setTask","onSubmitForm","event","preventDefault","length","newTodo","status","alert","handleChange","target","value","className","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mike/coding/ongoing_projects/Todo_app/client/src/components/AddTodo.js"],"sourcesContent":["import { useState } from 'react'\n\nconst InputTodo = ({ addTodo }) => {\n  const [task, setTask] = useState('')\n\n\n  const onSubmitForm = (event) => {\n    event.preventDefault()\n    if (task.length) {\n      const newTodo = {\n        task: task,\n        status: false,\n      }\n      addTodo(newTodo)\n      setTask('')\n    } else {\n      alert('Cannot send an empty task')\n    }\n  }\n\n  const handleChange = (event) => {\n    setTask(event.target.value)\n  }\n\n  return (\n    <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n      <input\n        type=\"text\"\n        placeholder=\"add task\"\n        className=\"form-control\"\n        value={task}\n        onChange={handleChange}\n      />\n      <button className=\"btn btn-success\">Add</button>\n    </form>\n  )\n}\n\nexport default InputTodo\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC5B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAGpC,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIJ,IAAI,CAACK,MAAM,EAAE;MACf,MAAMC,OAAO,GAAG;QACdN,IAAI,EAAEA,IAAI;QACVO,MAAM,EAAE;MACV,CAAC;MACDR,OAAO,CAACO,OAAO,CAAC;MAChBL,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAAM;MACLO,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAMC,YAAY,GAAIN,KAAK,IAAK;IAC9BF,OAAO,CAACE,KAAK,CAACO,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACEhB,OAAA;IAAMiB,SAAS,EAAC,aAAa;IAACC,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBACnDnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBJ,SAAS,EAAC,cAAc;MACxBD,KAAK,EAAEX,IAAK;MACZiB,QAAQ,EAAER;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF1B,OAAA;MAAQiB,SAAS,EAAC,iBAAiB;MAAAE,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEX,CAAC;AAAAvB,EAAA,CAlCKF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAoCf,eAAeA,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}